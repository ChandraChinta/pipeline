Demo 

Vector

> n = c(2, 3, 5) 
 s = c("aa", "bb", "cc", "dd", "ee") 

 c(n, s) 
[1] "2"  "3"  "5"  "aa" "bb" "cc" "dd" "ee"

Dataframe

b = c(TRUE, FALSE, TRUE) 

df = data.frame(n, s, b)  

Data Import  -- from Xlsx is possible

 library(MASS)
 height.survey = survey$Height
 mean(height.survey, na.rm=TRUE) 

Sql Connection

library(RODBC)
channel <- odbcConnect("RTESTODBC")
p <- sqlQuery(channel, "SELECT TOP 100   [AcountNumber], [PathId],[TrueName],[FileSize] FROM [ConnectedBackupdata_Temp]");

p <- sqlQuery(channel, "SELECT TOP 100  LegacyArchiveFileID,FileName,[FileSize] FROM LegacyArchiveFile");

http://rcharts.io/gallery/
http://rcharts.io/controls/polychart/index.html

Finding trend of file uploads 

str(p)
myvector <- data.frame(p)
myts <- ts(myvector, start=c(2009, 1), end=c(2015, 12), frequency=12)
myts2 <- window(myts, start=c(2014, 6), end=c(2014, 12))
plot(myts)
plot(myts2)

-------------------------------------------------------------------------------------------------
Creating FileSize trend -- using time series
-------------------------------------------------------------------------------------------------

library(RODBC)
channel <- odbcConnect("RTESTODBC")
EDR@$tl
results  <- sqlQuery(channel, "SELECT TOP 100 FileSize/1024 FROM LegacyArchiveFile")
 
str(results)

fSizeVector <- data.frame(results)
fileSizeTrend <- ts(fSizeVector, start=c(2009, 1), end=c(2015, 12), frequency=12)
plot(fileSizeTrend)

library(RODBC)
channel <- odbcConnect("RODBC")

toSQL = data.frame(orderts) -- order ts available in orderts workspace
write.table(toSQL,"C:\\sfilename.txt",quote=FALSE,sep=",",row.names=FALSE,col.names=FALSE,append=FALSE);
sqlQuery(channel,"BULK INSERT pubs.dbo.tbl_ordersts FROM 'C:\\sfilename.txt' WITH (FIELDTERMINATOR = ',',  ROWTERMINATOR = '\\n')");

------------------------------------------------------------------
Creating Slicing FileSize trend -- using time series
------------------------------------------------------------------

Slice1 <- window(fileSizeTrend, start=c(2014, 1), end=c(2015, 12))
plot(Slice1)

Peek in 2012 , Finding Which month 
Peek2012 <- window(fileSizeTrend, start=c(2012, 1), end=c(2012, 12))
plot(Peek2012)

Peek2009 <- window(fileSizeTrend, start=c(2009, 1), end=c(2009, 12))
plot(Peek2009)

--------------------------------------------------------
fileSizeForecast  -- using forecast package
-----------------------------------------------------------

library(forecast)
fileSizeForecast <- forecast(fileSizeTrend, h=10)
plot(fileSizeForecast)

fileSizeForecast2 <-forecast(fileSizeTrend, h=12, level=c(80,95), fan=FALSE, lambda=NULL, biasadj=FALSE)
plot(fileSizeForecast2)

meanForecast <- meanf(fileSizeTrend, h=10, level=c(80,95), fan=FALSE, lambda=NULL, biasadj=FALSE)
plot(meanForecast)
autoplot(meanForecast)

---------------------------------------------------------
mtcar sample
-----------------------------------------------------------

 mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5), labels=c("3gears","4gears","5gears")) 
 mtcars$am <- factor(mtcars$am,levels=c(0,1), labels=c("Automatic","Manual")) 
 mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),labels=c("4cyl","6cyl","8cyl")) 
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),  main="Distribution of Gas Milage", xlab="Miles Per Gallon", ylab="Density")


attach(mtcars)
plot(wt, mpg, main="Scatterplot Example", 
  	xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)



# 3D Scatterplot
library(scatterplot3d)
attach(mtcars)
scatterplot3d(wt,disp,mpg, main="3D Scatterplot")


---------------------------------------------------------------
R DEMO For Ignite
--------------------------------------------------------------
library(RODBC)
channel <- odbcConnect("RODBC")
p <- sqlQuery(channel, "Select  Year(createddate) as year,  Size/1024  as Size From  ArchiveDatasetforR Where Size is not null and Size <>-1")
 
myvector <- data.frame(p)

 library("ggplot2")
fileSizeTrend <- ts(myvector, start=c(2001), end=c(2016), frequency=12)
qplot(year,Size, data = myvector, colour = as.factor(year), geom = "line")


library(forecast)
fileSizeForecast <- forecast(fileSizeTrend, h=2) -- next 3 years 
plot(fileSizeForecast)

 ----------------------------------------------------------------

library(RODBC)
channel <- odbcConnect("RODBC")
p <- sqlQuery(channel, "Select * from ArchiveDataSetForFunction")
 
orderts <- data.frame(p)

library("ggplot2")
qplot(week, orders, data = orderts, colour = as.factor(year), geom = "line")
qplot(week, orders, data = orderts, colour = as.factor(year), geom = "boxplot")

histogram(orderts$week)
-- Get Peek
qplot(year, data=orderts, weight=orders, geom="histogram", binwidth=1) 


Q <- sqlQuery(channel, "Select year, sum(orders) as size from ArchiveDataSetForFunction group by year")

sizedf <- data.frame(Q)
sizets <- ts(sizedf,start=c(2001))
plot(sizets)
library(forecast)
fileSizeForecast <- forecast(sizets, h=2)
plot(fileSizeForecast)

M <- sqlQuery(channel, "Select year, sum(orders) as size from ArchiveDataSetForFunction where year<2014 group by year")
sizedf1 <- data.frame(M)
sizets1 <- ts(sizedf1,start=c(2001))
fileSizeForecastM <- forecast(sizets1, h=2)
plot(fileSizeForecastM)
ggplot(sizedf, aes(year, ..size.., colour = cut)) +  geom_freqpoly(binwidth = 1000)

------------------------------------------------------------------------------------
Orders POC
-------------------------------------------
library(RODBC)
channel <- odbcConnect("RODBC")
Q <- sqlQuery(channel, "Select year,quarter,week,orders from  ordersdata")
orderts <- data.frame(Q)

library(‘ggplot2’)
qplot(week, orders, data = orderts, colour = as.factor(year), geom = "line")
qplot(week, data=orderts, colour=as.factor(year), binwidth=0.5) + facet_wrap(~ quarter)

--- There was one more business week in the first quarter of 2009 than in the first quarter of 2010 and 2011; consequently, there is a consistent one week difference between the last weeks of the quarters
The model building approaches we will use later can usually cope with such a one-week offset discrepancy; for quick and dirty data exploration here let’s get simply rid of the 13-th week of 2009 Q1. Also, to support visualization we introduce a “week of current quarter” variable.


orderts2 <- cbind(orderts[-13,], weekinq=c(1:117))
prev <- orderts2[1,]
runvar <- 1
for(i in 2:nrow(orderts2)){
 current <- orderts2[i,]
 orderts2[i,"weekinq"] <- ifelse(prev$quarter == current$quarter, runvar+1, 1)
 runvar <- ifelse(prev$quarter == current$quarter, runvar+1, 1)
 prev <- current
}
rm(prev, current, runvar, i)


qplot(weekinq, orders, data = orderts2, colour = as.factor(year), geom = "line") + facet_wrap(~quarter)

 f <- data.frame(coef = fft(orderts2[1:104, "orders"]), freqindex = c(1:104))
qplot(freqindex, Mod(coef), data = f2[2:53,], geom = "line")

qplot(freqindex, Mod(coef), data = f[2:53,], geom = "line")


peaks <- Mod(f$coef) > 3
ffilt <- f
ffilt[!peaks, "coef"] <- 0
ffilt <- data.frame(index=ffilt$freqindex, value=Re(fft(ffilt$coef, inverse=TRUE))/104, type=rep("filtered", times=104))
ffilt <- rbind(ffilt, data.frame(index=seq(1:104), value=orderts2[1:104,"orders"], type=rep("original", times=104)))





-------------------------------------------------
TableauR -- data to a Tableau Data Extract
--------------------------------------------------

  library(tableauR)
  library(RODBC)
  # create connection to my datastore
  ch = odbcConnect("DSN", "USER", "PWD")
  # get the data
  df = sqlQuery(ch, "SELECT * FROM TABLE")
  # basic regression
  mod = glm(x ~ y, data=df, family=binomial())
  df = transform(df, 
                 pred = predict(mod, 
                                newdata=df, 
                                type="response")
  # save the scored data to a Tableau Data Extract
  df2TDE(df, file="r-df.tde")
